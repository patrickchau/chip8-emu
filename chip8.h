#pragma once
#include <string>

class chip8 {
public:
	chip8();
	~chip8();
	bool initialize();
	bool loadGame(char* filename);
	void emulateCycle();

	bool drawFlag;
	unsigned short opcode;
	unsigned char memory[4096];

	// has 16 different registers: V0 to VF
	unsigned char reg[16];

	// index register
	unsigned short I;

	// program counter
	unsigned short pc;

	// stack
	unsigned short stack[16];
	unsigned short sp; 

	// system memory map
	//0x000 - 0x1FF - chip 8 interpreter
	//0x050 - 0x0A0 - 4x5 pixel font set
	//0x200 - 0xFFF - program ROM, work RAM

	// pixel array for the display: draw = 1, undrawn = 0
	unsigned char gfx[64 * 32];

	// interrupts and hardware
	unsigned char delay_timer;
	unsigned char sound_timer;

	// keys
	unsigned char key[16];

	// font set for chip8
	unsigned char chip8_fontset[80] =
	{
	  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	  0x20, 0x60, 0x20, 0x20, 0x70, // 1
	  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
};